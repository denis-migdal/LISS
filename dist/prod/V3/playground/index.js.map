{"version":3,"file":"playground/index.js","mappings":"8EAAe,G,mHCIf,MAAMA,EAAW,CACb,cACA,YACA,eACA,cAGEC,EAAkB,cAGlBC,EAAaC,SAASC,cAA8B,mBAIpDC,EAAS,IAAIF,SAASG,iBAAmC,2BAE/DJ,EAAWK,iBAAiB,UAAU,KAClCC,QAAQC,KAAK,cACb,MAAMC,EAAQR,EAAWS,aAAa,QAASC,MAAM,KACrD,IAAI,IAAIC,KAASR,EACbQ,EAAMC,QAAUJ,EAAMK,SAASF,EAAMG,MAAM,IAGnD,IAAI,IAAIH,KAASR,EAEbQ,EAAMN,iBAAiB,SAAUU,IAE7B,MAAMC,EAASD,EAAGC,OACZJ,EAAUI,EAAOJ,QACjBK,EAAUD,EAAOF,MAEjBI,EAAUlB,EAAWS,aAAa,QAASC,MAAM,KAEvD,GAAIE,EACMM,EAAQL,SAASI,IACnBC,EAAQC,KAAKF,OACd,CACH,MAAMG,EAAMF,EAAQG,QAAQJ,IAChB,IAATG,GACCF,EAAQI,OAAOF,EAAK,EAC5B,CAEApB,EAAWuB,aAAa,OAAQL,EAAQM,KAAK,KAAK,IAO1D,SAASC,EAAWC,GAChBC,EAASb,MAAQY,EAEjB1B,EAAW0B,KAAOA,CACtB,CAEA,MAAMC,EAAW1B,SAASC,cAAiC,UAG3D,IAAI,IAAI0B,KAAW9B,EACf6B,EAASE,OAAQ,IAAIC,OAAOF,EAASA,IAEzCD,EAAStB,iBAAiB,UAAU,KAChC,MAAM0B,EAAM,IAAIC,IAAIC,UACpBF,EAAIG,aAAaC,IAAI,UAAWR,EAASb,OACzCsB,QAAQC,UAAU,CAAC,EAAG,GAAIN,GAE1BN,EAAWE,EAASb,MAAM,IAQ9BW,EAHqB,IAAIa,gBAAgBL,SAASM,QAChBC,IAAI,YAEhBzC,G","sources":["webpack://LISS/./V3/pages/playground/index.html","webpack://LISS/./V3/pages/playground/index.ts"],"sourcesContent":["export default __webpack_public_path__ + \"playground/index.html\";","import \"pages/skeleton\";\nimport \"pages/skeleton/components/liss-playground/LISSPlayground\";\nimport type PlaygroundArea from \"pages/skeleton/components/playground-area/PlaygroundArea\";\n\nconst examples = [\n    \"hello-world\",\n    \"auto-liss\",\n    \"auto-vanilla\",\n    \"auto-attrs\"\n];\n\nconst DEFAULT_EXAMPLE = \"hello-world\";\n\n// liss-playground\nconst playground = document.querySelector<PlaygroundArea>('liss-playground')!;\n\n// init checkboxes\n\nconst checks = [...document.querySelectorAll<HTMLInputElement>('input[type=\"checkbox\"]')];\n\nplayground.addEventListener('change', () => {\n    console.warn(\"called ???\");\n    const codes = playground.getAttribute('show')!.split(',');\n    for(let check of checks)\n        check.checked = codes.includes(check.value);\n})\n\nfor(let check of checks) {\n\n    check.addEventListener('input', (ev) => {\n\n        const target = ev.target! as HTMLInputElement;\n        const checked = target.checked;\n        const page    = target.value;\n\n        const layouts = playground.getAttribute('show')!.split(',');\n        \n        if( checked ) {\n            if( ! layouts.includes(page) )\n                layouts.push(page);\n        } else {\n            const idx = layouts.indexOf(page );\n            if(idx !== -1)\n                layouts.splice(idx, 1);\n        }\n\n        playground.setAttribute('show', layouts.join(','));\n    });\n\n}\n\n// init select\n\nfunction setExample(name: string) {\n    selector.value = name;\n    //playground.removeAttribute('show'); // this is an issue...\n    playground.name = name;\n}\n\nconst selector = document.querySelector<HTMLSelectElement>('select')!;\n//const webcomp_name = document.querySelector<HTMLInputElement>('input')!;\n\nfor(let example of examples)\n    selector.append( new Option(example, example));\n\nselector.addEventListener('change', () => {\n    const url = new URL(location as any);\n    url.searchParams.set(\"example\", selector.value);\n    history.pushState({}, \"\", url);\n\n    setExample(selector.value);\n});\n\n// init current example\n\nconst searchParams = new URLSearchParams(location.search);\nconst example      = searchParams.get('example');\n\nsetExample(example ?? DEFAULT_EXAMPLE);"],"names":["examples","DEFAULT_EXAMPLE","playground","document","querySelector","checks","querySelectorAll","addEventListener","console","warn","codes","getAttribute","split","check","checked","includes","value","ev","target","page","layouts","push","idx","indexOf","splice","setAttribute","join","setExample","name","selector","example","append","Option","url","URL","location","searchParams","set","history","pushState","URLSearchParams","search","get"],"sourceRoot":""}